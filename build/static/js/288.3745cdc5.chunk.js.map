{"version":3,"file":"static/js/288.3745cdc5.chunk.js","mappings":"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","sources":["components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.tsx","webpack://upto30/./src/components/Users/User.module.css?05eb","components/Users/User.tsx","components/Users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\"};","import React, {useState, useEffect} from 'react'\nimport {Pagination} from 'antd'\nimport styles from './Paginator.module.css'\n\ntype PropsType = {\n\ttotalItemsCount: number,\n\tpageSize: number,\n\tcurrentPageNumber: number,\n\tonPageChanged?: (pageNumber: number) => void,\n\tportionSize?: number\n}\n\nconst Paginator: React.FC<PropsType> = ({\n\ttotalItemsCount,\n\tpageSize,\n\tcurrentPageNumber,\n\tonPageChanged = () => {},\n\tportionSize = 10\n}) => {\n\tconst [portionNumber, setPortionNumber] = useState(1)\n\n\tuseEffect(() => {\n\t\tconst newPortionNumber = Math.ceil(currentPageNumber / portionSize)\n\t\tif (newPortionNumber !== portionNumber) {\n\t\t\tsetPortionNumber(newPortionNumber)\n\t\t}\n\t}, [currentPageNumber, portionSize])\n\n\treturn (\n\t\t<div className={styles.paginator}>\n\n\t\t\t<Pagination\n\t\t\t\tcurrent={currentPageNumber}\n\t\t\t\ttotal={totalItemsCount}\n\t\t\t\tpageSize={pageSize}\n\t\t\t\tonChange={page => onPageChanged(page)}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tstyle={{marginTop: '20px'}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Paginator\n","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"User_selectedPage__99e-9\",\"card\":\"User_card__haOgP\",\"preloaderOverlay\":\"User_preloaderOverlay__W8cq5\",\"listItem\":\"User_listItem__A4iX5\"};","import React, {FC, useState} from 'react'\nimport {UserType} from '../../types'\nimport {Card, Button, Avatar, Input} from 'antd'\nimport {NavLink} from 'react-router-dom'\nimport styles from './User.module.css'\n\ntype UserProps = {\n\tuser: UserType\n\tfollowingInProgress: number[]\n\tonFollow: (userId: number) => void\n\tonUnfollow: (userId: number) => void\n\tonStatusChange: (userId: number, status: string | null) => void\n\tdefaultAvatar: string\n}\n\nconst User: FC<UserProps> = ({\n\tuser,\n\tfollowingInProgress,\n\tonFollow,\n\tonUnfollow,\n\tonStatusChange,\n\tdefaultAvatar\n}) => {\n\tconst [inputValue, setInputValue] = useState<string>('')\n\n\tconst handleBlur = () => {\n\t\tonStatusChange(user.id, inputValue || null)\n\t\tsetInputValue('')\n\t}\n\n\treturn (\n\t\t<Card\n\t\t\ttitle={<strong>{user.name}</strong>}\n\t\t\textra={user.followed ? (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tdanger\n\t\t\t\t\tdisabled={followingInProgress.includes(user.id)}\n\t\t\t\t\tonClick={() => onUnfollow(user.id)}\n\t\t\t\t>\n\t\t\t\t\tОтписаться\n\t\t\t\t</Button>\n\t\t\t) : (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tdisabled={followingInProgress.includes(user.id)}\n\t\t\t\t\tonClick={() => onFollow(user.id)}\n\t\t\t\t>\n\t\t\t\t\tПодписаться\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t\tclassName={styles.card}\n\t\t>\n\t\t\t<NavLink to={`/sn/profile/${user.id}`}>\n\t\t\t\t<Avatar\n\t\t\t\t\tsize={64}\n\t\t\t\t\tsrc={user.photos.small || defaultAvatar}\n\t\t\t\t\talt={user.name}\n\t\t\t\t/>\n\t\t\t</NavLink>\n\t\t\t<div style={{marginTop: '10px'}}>\n\t\t\t\t<span>{user.status || 'Нет статуса'}</span>\n\t\t\t</div>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Обновить статус\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\tonBlur={handleBlur}\n\t\t\t\tstyle={{marginTop: '10px'}}\n\t\t\t/>\n\t\t</Card>\n\t)\n}\n\nexport default User\n","import React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n\tupdateStatus,\n\tselectUsers,\n\tselectTotalCount,\n\tselectCurrentPage,\n\tselectPageSize,\n\tsetCurrentPage,\n\ttoggleIsFetching,\n\tselectIsFetching,\n\tselectFollowingInProgress, unfollowUserById, followUserById, getUsersThunk\n} from '../../store/usersSlice'\nimport {List, Avatar, Input, Spin} from 'antd'\nimport defaultAvatar from '../../assets/defaultAvatar.png'\nimport Paginator from '../common/Paginator/Paginator'\nimport {useSearchParams} from 'react-router-dom'\nimport {AppDispatch} from '../../store/store'\nimport User from './User'\n\nconst Users = () => {\n\tconst dispatch = useDispatch<AppDispatch>()\n\tconst users = useSelector(selectUsers)\n\tconst isFetching = useSelector(selectIsFetching)\n\tconst [inputValues, setInputValues] = useState<{ [key: number]: string }>({})\n\tconst totalUsersCount = useSelector(selectTotalCount)\n\tconst currentPage = useSelector(selectCurrentPage)\n\tconst pageSize = useSelector(selectPageSize)\n\tconst [searchParams, setSearchParams] = useSearchParams()\n\n\tconst handleStatusChange = (userId: number) => {\n\t\tdispatch(updateStatus({userId, status: inputValues[userId] || null}))\n\t\tsetInputValues(prevValues => ({...prevValues, [userId]: ''}))\n\t}\n\n\tconst handlePageChange = (pageNumber: number) => {\n\t\tsetSearchParams({page: String(pageNumber)})\n\t\tdispatch(setCurrentPage(pageNumber))\n\t\tdispatch(toggleIsFetching(true))\n\t}\n\n\tconst handleFollow = (userId: number) => {\n\t\tdispatch(followUserById(userId))\n\t}\n\n\tconst handleUnfollow = (userId: number) => {\n\t\tdispatch(unfollowUserById(userId))\n\t}\n\n\tuseEffect(() => {\n\t\tconst pageFromUrl = Number(searchParams.get('page')) || 1\n\t\tdispatch(setCurrentPage(pageFromUrl))\n\t\tdispatch(getUsersThunk({currentPage: pageFromUrl, pageSize}))\n\t}, [dispatch, searchParams, pageSize])\n\n\tlet followingInProgress = useSelector(selectFollowingInProgress)\n\n\treturn (\n\t\t<>\n\t\t\t<Paginator\n\t\t\t\ttotalItemsCount={totalUsersCount}\n\t\t\t\tpageSize={pageSize}\n\t\t\t\tcurrentPageNumber={currentPage}\n\t\t\t\tonPageChanged={handlePageChange}\n\t\t\t\tportionSize={10}\n\t\t\t/>\n\t\t\t{isFetching ? (\n\t\t\t\t<div className=\"preloader-overlay\">\n\t\t\t\t\t<Spin size=\"large\"/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<List\n\t\t\t\t\tdataSource={users}\n\t\t\t\t\trenderItem={(user) => (\n\t\t\t\t\t\t<User\n\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\tfollowingInProgress={followingInProgress}\n\t\t\t\t\t\t\tonFollow={handleFollow}\n\t\t\t\t\t\t\tonUnfollow={handleUnfollow}\n\t\t\t\t\t\t\tonStatusChange={handleStatusChange}\n\t\t\t\t\t\t\tdefaultAvatar={defaultAvatar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Users\n"],"names":["_ref","totalItemsCount","pageSize","currentPageNumber","onPageChanged","portionSize","portionNumber","setPortionNumber","useState","useEffect","newPortionNumber","Math","ceil","_jsx","className","styles","paginator","children","Pagination","current","total","onChange","page","showSizeChanger","style","marginTop","user","followingInProgress","onFollow","onUnfollow","onStatusChange","defaultAvatar","inputValue","setInputValue","_jsxs","Card","title","name","extra","followed","Button","type","danger","disabled","includes","id","onClick","NavLink","to","Avatar","size","src","photos","small","alt","status","Input","placeholder","value","e","target","onBlur","handleBlur","Users","dispatch","useDispatch","users","useSelector","selectUsers","isFetching","selectIsFetching","inputValues","setInputValues","totalUsersCount","selectTotalCount","currentPage","selectCurrentPage","selectPageSize","searchParams","setSearchParams","useSearchParams","handleStatusChange","userId","updateStatus","prevValues","handleFollow","followUserById","handleUnfollow","unfollowUserById","pageFromUrl","Number","get","setCurrentPage","getUsersThunk","selectFollowingInProgress","_Fragment","Paginator","pageNumber","String","toggleIsFetching","Spin","List","dataSource","renderItem","User"],"sourceRoot":""}