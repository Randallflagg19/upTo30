{"version":3,"file":"static/js/448.5b975bfb.chunk.js","mappings":"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","sources":["webpack://upto30/./src/components/Translator/translatorComponents/Login/Login.module.css?7291","components/Translator/API/API.ts","components/Translator/translatorComponents/Login/Login.tsx","webpack://upto30/./src/components/Translator/translatorComponents/PostItem/PostItem.module.css?1baa","components/Translator/translatorComponents/PostItem/PostItem.tsx","webpack://upto30/./src/components/Translator/translatorComponents/Inputs/Inputs.module.css?0d90","components/Translator/translatorComponents/Inputs/Inputs.tsx","webpack://upto30/./src/components/Translator/translatorComponents/Paginator/Pagination.module.css?dcf3","components/Translator/translatorComponents/Paginator/Pagination.tsx","components/Translator/translatorComponents/Main/usePosts.tsx","webpack://upto30/./src/components/Translator/translatorComponents/Main/Main.module.css?5af7","components/Translator/translatorComponents/Main/Main.tsx","routes/routesTranslator.tsx","components/Translator/Translator.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authWrapper\":\"Login_authWrapper__4Jl87\",\"loginButton\":\"Login_loginButton__9LLct\",\"authMessage\":\"Login_authMessage__oV8uN\"};","class API {\n\turl: string\n\n\tconstructor(url: string) {\n\t\tthis.url = url\n\t}\n\n\tregistration = async (login: string, password: string) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${this.url}/registation`, {\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({username: login, password: password})\n\t\t\t})\n\t\t\treturn response.ok\n\t\t}\n\t\tcatch (error) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tfetchAllWords = async () => {\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('TheToken')\n\t\t\tif (!token) {\n\t\t\t\tthrow new Error('No token found')\n\t\t\t}\n\n\t\t\tconst response = await fetch(`${this.url}/translator/get`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'x-access-token': localStorage.getItem('TheToken') || ''\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`)\n\t\t\t}\n\n\t\t\tconst data = await response.json()\n\n\t\t\tconst arrayOfWords = data.map((word: any) => ({\n\t\t\t\tid: word.id,\n\t\t\t\tword: word.en,\n\t\t\t\ttranslation: word.ru\n\t\t\t}))\n\t\t\treturn arrayOfWords\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error('Failed to fetch words:', error)\n\t\t\treturn []\n\t\t}\n\t}\n\tfetchGuestWords = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${this.url}/translator/guest/get`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`)\n\t\t\t}\n\n\t\t\tconst data = await response.json()\n\n\t\t\tconst arrayOfWords = data.map((word: any) => ({\n\t\t\t\tid: word.id,\n\t\t\t\tword: word.en,\n\t\t\t\ttranslation: word.ru\n\t\t\t}))\n\t\t\treturn arrayOfWords\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error('Failed to fetch words:', error)\n\t\t\treturn []\n\t\t}\n\t}\n\tsendWords = async (en: string, ru: string) => {\n\t\tconst response = await fetch(`${this.url}/translator/write`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-access-token': localStorage.getItem('TheToken') || ''\n\t\t\t},\n\t\t\tbody: JSON.stringify({en, ru})\n\t\t})\n\t\tif (!response.ok) throw new Error('Ошибка при отправке данных на сервер')\n\t\treturn await response.json()\n\t}\n\n\tlogin = async (login: string, password: string) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${this.url}/login`, {\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({username: login, password: password})\n\t\t\t})\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Invalid login or password')\n\t\t\t}\n\t\t\tconst data = await response.json()\n\t\t\treturn data\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow new Error('Invalid login or password')\n\t\t}\n\t}\n\n\tdelete = async (id: number) => {\n\t\ttry {\n\t\t\tawait fetch(`${this.url}/translator/delete`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'x-access-token': localStorage.getItem('TheToken') || ''\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({id})\n\t\t\t})\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow new Error('Ошибка при удалении слова с сервера')\n\t\t}\n\t}\n}\n\n// let api = new API('http://localhost:3001/api')\n\nlet api = new API('https://gustaw.ru/api')\n\nexport default api\n","import React, {useState, useContext} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {UserContext} from '../../Translator'\nimport {AuthMessageContext} from '../../Translator'\nimport styles from './Login.module.css'\nimport api from '../../API/API'\n\nexport default function Login() {\n\tconst {setIsLoggedIn, setIsGuest} = useContext(UserContext)\n\tconst [login, setLogin] = useState('test')\n\tconst [password, setPassword] = useState('test')\n\tconst navigate = useNavigate()\n\tconst {authMessage, setAuthMessage} = useContext(AuthMessageContext)\n\n\tconst handleLogin = async () => {\n\t\ttry {\n\t\t\tlet res = await api.login(login, password)\n\t\t\tlocalStorage.setItem('TheToken', res.token)\n\t\t\tsetIsLoggedIn(true)\n\t\t\tsetTimeout(() => navigate('/translator/main'), 500)\n\t\t\tsetAuthMessage('Добро пожаловать')\n\t\t\tsetTimeout(() => setAuthMessage('Требуется авторизация'), 500)\n\t\t}\n\t\tcatch (error) {\n\t\t\tsetIsLoggedIn(false)\n\t\t\tsetAuthMessage('Неправильный логин или пароль')\n\t\t}\n\t}\n\n\tconst handleRegistration = async () => {\n\t\ttry {\n\t\t\tlet res = await api.registration(login, password)\n\t\t\tres\n\t\t\t\t? setAuthMessage('Вы зарегистрированы')\n\t\t\t\t: setAuthMessage('Пользователь уже зарегистрирован')\n\t\t}\n\t\tcatch (error) {\n\t\t\tsetAuthMessage('Ошибка при регистрации')\n\t\t}\n\t}\n\n\tconst handleGuestLogin = () => {\n\t\tlocalStorage.setItem('isGuest', 'true')\n\t\tsetIsGuest(true)\n\t\tsetIsLoggedIn(false)\n\t\tnavigate('/translator/main')\n\t}\n\n\tconst handleFocus = (setter: string) => {\n\t\tif (setter === 'login' && login === 'test') {\n\t\t\tsetLogin('')\n\t\t}\n\t\telse if (setter === 'password' && password === 'test') {\n\t\t\tsetPassword('')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={styles.authWrapper}>\n\t\t\t<h1 className={styles.authMessage}>{authMessage}</h1>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tonFocus={() => handleFocus('login')}\n\t\t\t\tonChange={(e) => setLogin(e.target.value)}\n\t\t\t\tvalue={login}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tonFocus={() => handleFocus('password')}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\tvalue={password}\n\t\t\t/>\n\t\t\t<button className={styles.loginButton} onClick={handleLogin}>\n\t\t\t\tLogin\n\t\t\t</button>\n\t\t\t<button className={styles.loginButton} onClick={handleGuestLogin}>\n\t\t\t\tВойти как гость\n\t\t\t</button>\n\t\t\t<button className={styles.loginButton} onClick={handleRegistration}>\n\t\t\t\tЗарегистрироваться\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"imageButton\":\"PostItem_imageButton__541UL\",\"post\":\"PostItem_post__A2gF3\"};","import React, {useContext} from 'react'\nimport styles from './PostItem.module.css'\nimport {UserContext} from '../../Translator'\nimport api from '../../API/API'\n\ntype PostItemProps = {\n\tpost: {\n\t\tid: number,\n\t\tword: string,\n\t\ttranslation: string,\n\t}\n\tonDelete: (id: number) => void\n}\n\nconst PostItem: React.FC<PostItemProps> = ({post, onDelete}) => {\n\tconst handleDelete = async () => {\n\t\tconst confirmDelete = window.confirm(\n\t\t\t'Вы действительно хотите удалить это слово?'\n\t\t)\n\t\tif (confirmDelete) {\n\t\t\tconst id = post.id\n\t\t\ttry {\n\t\t\t\tawait api.delete(id)\n\t\t\t\tconsole.log(`Word with id ${id} has been deleted.`)\n\t\t\t\tonDelete(id)\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(`Error deleting word with id ${id}:`, error)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst {isLoggedIn} = useContext(UserContext)\n\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.post}>\n\t\t\t\t<strong>\n\t\t\t\t\t{post.word} - {post.translation}\n\t\t\t\t</strong>\n\t\t\t\t{isLoggedIn && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={styles.imageButton}\n\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t></button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default PostItem\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Inputs_wrapper__DZ-5t\",\"errorInput\":\"Inputs_errorInput__0FdN5\",\"inputWrapper\":\"Inputs_inputWrapper__9fguB\",\"globalInput\":\"Inputs_globalInput__kaK1X\",\"add\":\"Inputs_add__WL5TP\",\"gap\":\"Inputs_gap__-Z4As\"};","import React, {useContext, useRef} from 'react'\nimport {UserContext} from '../../Translator'\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\nimport * as Yup from 'yup'\nimport styles from './Inputs.module.css'\n\nconst Inputs = ({\n\tonAdd\n}: {\n\tonAdd: (word: string, translation: string) => void;\n}) => {\n\tconst wordInputRef = useRef<HTMLInputElement>(null)\n\tconst {isLoggedIn} = useContext(UserContext)\n\n\tconst initialValues = {word: '', translation: ''}\n\n\tconst validationSchema = Yup.object({\n\t\tword: Yup.string().required('Обязательное поле'),\n\t\ttranslation: Yup.string().required('Обязательное поле')\n\t})\n\n\tconst handleSubmit = (values: { word: string; translation: string },\n\t\t{resetForm}: { resetForm: () => void }) => {\n\t\tonAdd(values.word, values.translation)\n\t\tresetForm()\n\t\twordInputRef.current?.focus()\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{isLoggedIn && (\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t{() => (\n\t\t\t\t\t\t<Form className={styles.wrapper}>\n\t\t\t\t\t\t\t<div className={styles.inputWrapper}>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"word\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"word\"\n\t\t\t\t\t\t\t\t\tclassName={styles.globalInput}\n\t\t\t\t\t\t\t\t\tinnerRef={wordInputRef}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"word\" component=\"div\" className={styles.error}/>\n\t\t\t\t\t\t\t\t<div className={styles.gap}></div>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"translation\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"перевод\"\n\t\t\t\t\t\t\t\t\tclassName={styles.globalInput}\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"translation\" component=\"div\" className={styles.error}/>\n\t\t\t\t\t\t\t\t<button className={styles.add} type=\"submit\">\n\t\t\t\t\t\t\t\t\tadd\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Inputs\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__YC04s\",\"selectedPage\":\"Pagination_selectedPage__WTw9F\",\"prev\":\"Pagination_prev__hcPBu\",\"next\":\"Pagination_next__tgJkT\",\"pageButton\":\"Pagination_pageButton__SeLg6\"};","import React, {useMemo} from 'react'\nimport styles from './Pagination.module.css'\n\ntype PaginationProps = {\n\tcurrentPage: number\n\tsetCurrentPage: (page: number) => void\n\tpostsCount: number\n\twordsOnPage: number\n}\n\nconst Pagination: React.FC<PaginationProps> = ({currentPage, setCurrentPage, postsCount, wordsOnPage}) => {\n\tconst pagesCount = Math.ceil(postsCount / wordsOnPage)\n\tconst portionSize = 10\n\tconst portionCount = Math.ceil(pagesCount / portionSize)\n\tconst currentPortion = Math.ceil(currentPage / portionSize)\n\n\tconst leftPortionPageNumber = (currentPortion - 1) * portionSize + 1\n\tconst rightPortionPageNumber = Math.min(currentPortion * portionSize, pagesCount)\n\n\tconst pagesItems = useMemo(() => {\n\t\tconst pages = []\n\t\tfor (let i = leftPortionPageNumber; i <= rightPortionPageNumber; i++) {\n\t\t\tpages.push(\n\t\t\t\t<button\n\t\t\t\t\tkey={i}\n\t\t\t\t\tonClick={() => setCurrentPage(i)}\n\t\t\t\t\tclassName={currentPage === i ? styles.selectedPage : undefined}\n\t\t\t\t>\n\t\t\t\t\t{i}\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\treturn pages\n\t}, [leftPortionPageNumber, rightPortionPageNumber, currentPage, setCurrentPage])\n\n\treturn (\n\t\t<span className={styles.pagination}>\n\t\t\t{currentPortion > 1 && (\n\t\t\t\t<button className={styles.prev}\n\t\t\t\t        onClick={() => setCurrentPage(currentPage - 1)}>Prev</button>\n\t\t\t)}\n\t\t\t{pagesItems}\n\t\t\t{currentPortion < portionCount && (\n\t\t\t\t<button className={styles.next}\n\t\t\t\t        onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n\t\t\t)}\n\t\t</span>\n\t)\n}\n\nexport default Pagination\n","import api from '../../API/API'\nimport {useEffect, useState} from 'react'\n\nexport interface Post {\n\tid: number;\n\tword: string;\n\ttranslation: string;\n}\n\nexport function usePosts(setIsLoggedIn: (value: boolean) => void) {\n\tconst [posts, setPosts] = useState<Post[]>([])\n\tconst [searchValue, setSearchValue] = useState('')\n\n\tconst fetchWords = async () => {\n\t\ttry {\n\t\t\tif (localStorage.getItem('TheToken')) {\n\t\t\t\tsetIsLoggedIn(true)\n\t\t\t\tconst words = await api.fetchAllWords()\n\t\t\t\tsetPosts(words)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst words = await api.fetchGuestWords()\n\t\t\t\tsetPosts(words)\n\t\t\t}\n\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error('Failed to fetch words:', error)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchWords()\n\t}, [setIsLoggedIn])\n\n\tconst handleDeletePost = (id: number) => {\n\t\tsetPosts((prevPosts) => prevPosts.filter((post) => post.id !== id))\n\t}\n\n\tconst handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetSearchValue(e.target.value.toLowerCase())\n\t}\n\n\tconst addNewPost = async (word: string, translation: string) => {\n\t\ttry {\n\t\t\tconst newWordData = await api.sendWords(word, translation)\n\t\t\tconst newPost = {id: newWordData.id, word, translation}\n\t\t\tsetPosts((prevPosts) => [newPost, ...prevPosts])\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.error('Failed to add new word:', error)\n\t\t}\n\t}\n\n\tconst arrange = () => {\n\t\tsetPosts((prevPosts) => {\n\t\t\tconst sortedPosts = [...prevPosts].sort((a, b) =>\n\t\t\t\ta.word.localeCompare(b.word)\n\t\t\t)\n\t\t\treturn sortedPosts\n\t\t})\n\t}\n\n\tconst filterMatch = () => {\n\t\tconst wordCount: { [key: string]: number } = {}\n\t\tconst duplicates: Post[] = []\n\n\t\tposts.forEach((post) => {\n\t\t\tconst lowerCaseWord = post.word.toLowerCase()\n\t\t\twordCount[lowerCaseWord] = (wordCount[lowerCaseWord] || 0) + 1\n\t\t})\n\n\t\tposts.forEach((post) => {\n\t\t\tconst lowerCaseWord = post.word.toLowerCase()\n\t\t\tif (wordCount[lowerCaseWord] > 1) {\n\t\t\t\tduplicates.push(post)\n\t\t\t}\n\t\t})\n\n\t\tsetPosts(duplicates)\n\t}\n\n\treturn {\n\t\tposts: posts.filter((post) =>\n\t\t\tpost.word.toLowerCase().includes(searchValue)\n\t\t),\n\t\thandleDeletePost,\n\t\thandleSearchChange,\n\t\taddNewPost,\n\t\tarrange,\n\t\tfilterMatch,\n\t\tsearchValue\n\t}\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"mainHeader\":\"Main_mainHeader__uiodj\",\"search\":\"Main_search__F-6Gm\",\"arrangeButton\":\"Main_arrangeButton__o46uX\",\"selectedPage\":\"Main_selectedPage__uRZVo\",\"btn\":\"Main_btn__9mG4K\",\"exit\":\"Main_exit__pY60W\",\"authLink\":\"Main_authLink__n5wn0\",\"arrange\":\"Main_arrange__SPwoh\",\"match\":\"Main_match__2odUd\"};","import React, {useContext, useMemo, useState, useCallback} from 'react'\nimport PostItem from '../PostItem/PostItem'\nimport Inputs from '../Inputs/Inputs'\nimport Pagination from '../Paginator/Pagination'\nimport {UserContext} from '../../Translator'\nimport {usePosts} from './usePosts'\nimport styles from './Main.module.css'\nimport {Link, useNavigate} from 'react-router-dom'\n\nconst Main = () => {\n\tconst userContext = useContext(UserContext)\n\tconst {isLoggedIn, setIsGuest, setIsLoggedIn, isGuest} = userContext\n\n\tconst {posts, handleDeletePost, filterMatch, handleSearchChange, addNewPost, arrange} = usePosts(setIsLoggedIn)\n\tconst navigate = useNavigate()\n\n\tconst [currentPage, setCurrentPage] = useState(1)\n\n\tconst wordsOnPage = 20\n\tconst postsPortion = useMemo(() => {\n\t\treturn posts.slice((currentPage - 1) * wordsOnPage, currentPage * wordsOnPage)\n\t}, [posts, currentPage])\n\n\tconst postsList = useMemo(() => {\n\t\treturn postsPortion.map(post => (\n\t\t\t<PostItem post={post} key={post.id} onDelete={handleDeletePost}/>\n\t\t))\n\t}, [postsPortion, handleDeletePost])\n\n\tconst handleExit = useCallback(() => {\n\t\tlocalStorage.removeItem('TheToken')\n\t\tsetIsLoggedIn(false)\n\t\tsetIsGuest(false)\n\t\tlocalStorage.setItem('isGuest', 'false')\n\t\tnavigate('/translator')\n\t}, [setIsLoggedIn, setIsGuest, navigate])\n\n\tconst handleFilterMatch = useCallback(() => {\n\t\tfilterMatch()\n\t\tsetCurrentPage(1)\n\t}, [filterMatch])\n\n\tif (!isLoggedIn && !isGuest) {\n\t\treturn <Link className={styles.authLink} to={'/'}>\n\t\t\tАвторизация\n\t\t</Link>\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<header className={styles.mainHeader}>\n\t\t\t\t<button className={styles.exit} onClick={handleExit}>Exit</button>\n\t\t\t\t<button className={styles.match} onClick={filterMatch}>\n\t\t\t\t\tmatch\n\t\t\t\t</button>\n\t\t\t\t<button className={styles.arrange} onClick={arrange}>\n\t\t\t\t\tsort\n\t\t\t\t</button>\n\t\t\t\t<form className={styles.search}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tSearch:\n\t\t\t\t\t\t<input type=\"search\" onChange={handleSearchChange}/>\n\t\t\t\t\t</label>\n\t\t\t\t</form>\n\t\t\t</header>\n\t\t\t<Inputs onAdd={addNewPost}/>\n\t\t\t<Pagination\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tsetCurrentPage={setCurrentPage}\n\t\t\t\tpostsCount={posts.length}\n\t\t\t\twordsOnPage={wordsOnPage}\n\t\t\t/>\n\t\t\t<div>{postsList}</div>\n\t\t</div>\n\t)\n}\n\nexport default Main\n","import React from 'react'\nimport Login from '../components/Translator/translatorComponents/Login/Login'\nimport Main from '../components/Translator/translatorComponents/Main/Main'\n\nexport const routesTranslator = [\n\t{path: '/', component: <Login/>, label: 'Логин'},\n\t{path: 'main', component: <Main/>, label: 'Main'},\n\t{path: '*', component: <h1>страничка не найдена</h1>, label: 'Not found'}\n]","import React, {useState} from 'react'\nimport {Route, Routes} from 'react-router-dom'\nimport Login from './translatorComponents/Login/Login'\nimport './Translator.css'\nimport Main from './translatorComponents/Main/Main'\nimport {routesTranslator} from '../../routes/routesTranslator'\n\nexport const UserContext = React.createContext<{\n\t\tisLoggedIn: boolean;\n\t\tisGuest: boolean;\n\t\tsetIsLoggedIn: React.Dispatch<React.SetStateAction<boolean>>;\n\t\tsetIsGuest: React.Dispatch<React.SetStateAction<boolean>>;\n\t}\n\t| any\n>(null)\nexport const AuthMessageContext = React.createContext<\n\t| {\n\tauthMessage: string;\n\tsetAuthMessage: React.Dispatch<React.SetStateAction<string>>;\n}\n\t| any\n>(null)\n\nfunction Translator() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\tconst [isGuest, setIsGuest] = useState(false)\n\tconst [authMessage, setAuthMessage] = useState('Требуется авторизация')\n\treturn (\n\t\t<UserContext.Provider value={{isLoggedIn, setIsLoggedIn, isGuest, setIsGuest}}>\n\t\t\t<AuthMessageContext.Provider value={{authMessage, setAuthMessage}}>\n\t\t\t\t<Routes>\n\t\t\t\t\t{routesTranslator.map((route) => (\n\t\t\t\t\t\t<Route key={route.path} path={route.path} element={route.component}/>))}\n\t\t\t\t</Routes>\n\t\t\t</AuthMessageContext.Provider>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default Translator\n"],"names":["constructor","url","registration","async","login","password","fetch","this","headers","method","body","JSON","stringify","username","ok","error","fetchAllWords","localStorage","getItem","Error","response","status","data","json","map","word","id","en","translation","ru","console","fetchGuestWords","sendWords","delete","Login","setIsLoggedIn","setIsGuest","useContext","UserContext","setLogin","useState","setPassword","navigate","useNavigate","authMessage","setAuthMessage","AuthMessageContext","handleFocus","setter","_jsxs","className","styles","children","_jsx","type","onFocus","onChange","e","target","value","onClick","res","api","setItem","token","setTimeout","handleGuestLogin","_ref","post","onDelete","isLoggedIn","_Fragment","window","confirm","log","onAdd","wordInputRef","useRef","validationSchema","Yup","required","Formik","initialValues","onSubmit","handleSubmit","values","_ref2","_wordInputRef$current","resetForm","current","focus","Form","wrapper","inputWrapper","Field","name","placeholder","globalInput","innerRef","autoComplete","ErrorMessage","component","gap","add","currentPage","setCurrentPage","postsCount","wordsOnPage","pagesCount","Math","ceil","portionCount","currentPortion","leftPortionPageNumber","rightPortionPageNumber","min","pagesItems","useMemo","pages","i","push","undefined","usePosts","posts","setPosts","searchValue","setSearchValue","useEffect","words","fetchWords","filter","toLowerCase","includes","handleDeletePost","prevPosts","handleSearchChange","addNewPost","newPost","arrange","sort","a","b","localeCompare","filterMatch","wordCount","duplicates","forEach","lowerCaseWord","Main","userContext","isGuest","postsPortion","slice","postsList","PostItem","handleExit","useCallback","removeItem","Inputs","Pagination","length","Link","to","routesTranslator","path","label","React","Provider","Routes","route","Route","element"],"sourceRoot":""}